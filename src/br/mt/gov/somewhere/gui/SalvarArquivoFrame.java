/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package br.mt.gov.somewhere.gui;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Someone
 */
public class SalvarArquivoFrame extends javax.swing.JFrame {

    /**
     * Creates new form SalvarArquivoFrame
     */
    public SalvarArquivoFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu = new javax.swing.JPopupMenu();
        jMenuItemAbrir = new javax.swing.JMenuItem();
        jTextFieldNomeArquivo = new javax.swing.JTextField();
        jButtonSalvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaArquivo = new javax.swing.JTextArea();
        jComboBoxTipo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelTamanho = new javax.swing.JLabel();

        jMenuItemAbrir.setText("Abrir arquivo");
        jMenuItemAbrir.setToolTipText("Abre arquivo de texto para a conversão");
        jMenuItemAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItemAbrirMousePressed(evt);
            }
        });
        jPopupMenu.add(jMenuItemAbrir);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conversor de String");
        setResizable(false);

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jTextAreaArquivo.setColumns(20);
        jTextAreaArquivo.setLineWrap(true);
        jTextAreaArquivo.setRows(5);
        jTextAreaArquivo.setWrapStyleWord(true);
        jTextAreaArquivo.setAutoscrolls(false);
        jTextAreaArquivo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextAreaArquivoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextAreaArquivoMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTextAreaArquivoMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTextAreaArquivo);

        jComboBoxTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "String para arquivo", "Arquivo para string" }));
        jComboBoxTipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTipoItemStateChanged(evt);
            }
        });

        jLabel1.setText("Escolha o tipo de conversão");

        jLabel2.setText("Nome do arquivo");

        jLabel3.setText("Tamanho (KB): ");

        jLabelTamanho.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelTamanho))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNomeArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalvar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldNomeArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSalvar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabelTamanho))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private boolean isStringValid(String value){
        return (value != null && !value.isEmpty());
    }
    private static final String STRING_PARA_ARQUIVO = "String para arquivo";
    private static final String ARQUIVO_PARA_STRING = "Arquivo para string";
    
    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        String texto = (String)jComboBoxTipo.getSelectedItem();
        JFileChooser chooser = new JFileChooser();        
        if(texto.equals(STRING_PARA_ARQUIVO)){
            chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);    
            chooser.showDialog(null, "Salvar aqui");

            if(!isStringValid(jTextFieldNomeArquivo.getText())){            
                JOptionPane.showMessageDialog(this, " O nome do arquivo é obrigatório", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else if(texto.equals(ARQUIVO_PARA_STRING)){
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            chooser.showDialog(null, "Selecione o arquivo para converter");
        }
               
        File file = chooser.getSelectedFile();
        if(file != null){
            try {
               if(texto.equals(STRING_PARA_ARQUIVO)){
                   Converter.converterParaArquivo(file, jTextFieldNomeArquivo.getText(), jTextAreaArquivo.getText(), jLabelTamanho);
                   JOptionPane.showMessageDialog(this, "Arquivo salvo com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
               } else {
                   jTextFieldNomeArquivo.setText(file.getName());
                   String convertido = Converter.converterParaString(file, jLabelTamanho);
                   jTextAreaArquivo.setText(convertido);
               }
            } catch(Exception e){}
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jComboBoxTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTipoItemStateChanged
        String texto = (String)jComboBoxTipo.getSelectedItem();
        if(texto.equals(STRING_PARA_ARQUIVO)){
            jButtonSalvar.setText("Salvar");
            jButtonSalvar.repaint();
        } else {
            jButtonSalvar.setText("Abrir");
            jButtonSalvar.repaint();
        }        
    }//GEN-LAST:event_jComboBoxTipoItemStateChanged

    private void jMenuItemAbrirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemAbrirMousePressed
             String texto = (String)jComboBoxTipo.getSelectedItem();
        JFileChooser chooser = new JFileChooser();
        if(texto.equals(STRING_PARA_ARQUIVO)){
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            chooser.showDialog(null, "Abrir arquivo");
        } else if(texto.equals(ARQUIVO_PARA_STRING)){
            JOptionPane.showMessageDialog(this, "Opção válida apenas para a conversão de String para Arquivo", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        File file = chooser.getSelectedFile();
        if(file != null){
            try {
               if(texto.equals(STRING_PARA_ARQUIVO)){                  
                 try (BufferedReader br = new BufferedReader(new FileReader(file))){
                    String line = null;
                    StringBuilder str = new StringBuilder();
                    line = br.readLine();
                    while(line != null){
                        str.append(line);
                        line = br.readLine();
                    }
                    jTextAreaArquivo.setText(str.toString());
                 } catch(Exception e){}                 
               } 
            } catch(Exception e){}
        }
        jPopupMenu.setVisible(false);
    }//GEN-LAST:event_jMenuItemAbrirMousePressed
    private void openPopup(java.awt.event.MouseEvent evt){
        if(evt.isPopupTrigger()){
            jPopupMenu.show(jTextAreaArquivo, evt.getX(), evt.getY());
        }
    }
    private void jTextAreaArquivoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextAreaArquivoMousePressed
        openPopup(evt);
    }//GEN-LAST:event_jTextAreaArquivoMousePressed

    private void jTextAreaArquivoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextAreaArquivoMouseClicked
        openPopup(evt);
    }//GEN-LAST:event_jTextAreaArquivoMouseClicked

    private void jTextAreaArquivoMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextAreaArquivoMouseReleased
        openPopup(evt);
    }//GEN-LAST:event_jTextAreaArquivoMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalvarArquivoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalvarArquivoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalvarArquivoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalvarArquivoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalvarArquivoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox jComboBoxTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelTamanho;
    private javax.swing.JMenuItem jMenuItemAbrir;
    private javax.swing.JPopupMenu jPopupMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaArquivo;
    private javax.swing.JTextField jTextFieldNomeArquivo;
    // End of variables declaration//GEN-END:variables
}
